(()=>{"use strict";var t={735:(t,e,n)=>{n.d(e,{Z:()=>s});var o=n(537),r=n.n(o),i=n(645),a=n.n(i)()(r());a.push([t.id,'/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n',"",{version:3,sources:["webpack://./node_modules/normalize.css/normalize.css"],names:[],mappings:"AAAA,2EAA2E;;AAE3E;+EAC+E;;AAE/E;;;EAGE;;AAEF;EACE,iBAAiB,EAAE,MAAM;EACzB,8BAA8B,EAAE,MAAM;AACxC;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,SAAS;AACX;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;EACE,cAAc;EACd,gBAAgB;AAClB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;EACE,uBAAuB,EAAE,MAAM;EAC/B,SAAS,EAAE,MAAM;EACjB,iBAAiB,EAAE,MAAM;AAC3B;;AAEA;;;EAGE;;AAEF;EACE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,6BAA6B;AAC/B;;AAEA;;;EAGE;;AAEF;EACE,mBAAmB,EAAE,MAAM;EAC3B,0BAA0B,EAAE,MAAM;EAClC,iCAAiC,EAAE,MAAM;AAC3C;;AAEA;;EAEE;;AAEF;;EAEE,mBAAmB;AACrB;;AAEA;;;EAGE;;AAEF;;;EAGE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,cAAc;EACd,cAAc;EACd,kBAAkB;EAClB,wBAAwB;AAC1B;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;;;;;EAKE,oBAAoB,EAAE,MAAM;EAC5B,eAAe,EAAE,MAAM;EACvB,iBAAiB,EAAE,MAAM;EACzB,SAAS,EAAE,MAAM;AACnB;;AAEA;;;EAGE;;AAEF;QACQ,MAAM;EACZ,iBAAiB;AACnB;;AAEA;;;EAGE;;AAEF;SACS,MAAM;EACb,oBAAoB;AACtB;;AAEA;;EAEE;;AAEF;;;;EAIE,0BAA0B;AAC5B;;AAEA;;EAEE;;AAEF;;;;EAIE,kBAAkB;EAClB,UAAU;AACZ;;AAEA;;EAEE;;AAEF;;;;EAIE,8BAA8B;AAChC;;AAEA;;EAEE;;AAEF;EACE,8BAA8B;AAChC;;AAEA;;;;;EAKE;;AAEF;EACE,sBAAsB,EAAE,MAAM;EAC9B,cAAc,EAAE,MAAM;EACtB,cAAc,EAAE,MAAM;EACtB,eAAe,EAAE,MAAM;EACvB,UAAU,EAAE,MAAM;EAClB,mBAAmB,EAAE,MAAM;AAC7B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,sBAAsB,EAAE,MAAM;EAC9B,UAAU,EAAE,MAAM;AACpB;;AAEA;;EAEE;;AAEF;;EAEE,YAAY;AACd;;AAEA;;;EAGE;;AAEF;EACE,6BAA6B,EAAE,MAAM;EACrC,oBAAoB,EAAE,MAAM;AAC9B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;;EAGE;;AAEF;EACE,0BAA0B,EAAE,MAAM;EAClC,aAAa,EAAE,MAAM;AACvB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,aAAa;AACf;;AAEA;;EAEE;;AAEF;EACE,aAAa;AACf",sourcesContent:['/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n'],sourceRoot:""}]);const s=a},28:(t,e,n)=>{n.d(e,{Z:()=>s});var o=n(537),r=n.n(o),i=n(645),a=n.n(i)()(r());a.push([t.id,"body > * {\n\tmargin: 0;\n\tpadding: 0;\n}\n\n* {\n\tbox-sizing: border-box;\n}\n\nbody,\nhtml {\n\theight: 100%;\n}\n\n.completed {\n\ttext-decoration: line-through;\n}\n\ntable tr:nth-child(odd) {\n\tbackground: rgb(208, 208, 208);\n\tmargin: 0;\n}\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;CACC,SAAS;CACT,UAAU;AACX;;AAEA;CACC,sBAAsB;AACvB;;AAEA;;CAEC,YAAY;AACb;;AAEA;CACC,6BAA6B;AAC9B;;AAEA;CACC,8BAA8B;CAC9B,SAAS;AACV",sourcesContent:["body > * {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n}\r\n\r\n* {\r\n\tbox-sizing: border-box;\r\n}\r\n\r\nbody,\r\nhtml {\r\n\theight: 100%;\r\n}\r\n\r\n.completed {\r\n\ttext-decoration: line-through;\r\n}\r\n\r\ntable tr:nth-child(odd) {\r\n\tbackground: rgb(208, 208, 208);\r\n\tmargin: 0;\r\n}\r\n"],sourceRoot:""}]);const s=a},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",o=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),o&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),o&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,o,r,i){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(a[d]=!0)}for(var c=0;c<t.length;c++){var l=[].concat(t[c]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,o=0;o<e.length;o++)if(e[o].identifier===t){n=o;break}return n}function o(t,o){for(var i={},a=[],s=0;s<t.length;s++){var d=t[s],c=o.base?d[0]+o.base:d[0],l=i[c]||0,A="".concat(c," ").concat(l);i[c]=l+1;var p=n(A),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=r(u,o);o.byIndex=s,e.splice(s,0,{identifier:A,updater:m,references:1})}a.push(A)}return a}function r(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,r){var i=o(t=t||[],r=r||{});return function(t){t=t||[];for(var a=0;a<i.length;a++){var s=n(i[a]);e[s].references--}for(var d=o(t,r),c=0;c<i.length;c++){var l=n(i[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=d}}},569:t=>{var e={};t.exports=function(t,n){var o=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return t[o](i,i.exports,n),i.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0,(()=>{var t=n(379),e=n.n(t),o=n(795),r=n.n(o),i=n(569),a=n.n(i),s=n(565),d=n.n(s),c=n(216),l=n.n(c),A=n(589),p=n.n(A),u=n(735),m={};m.styleTagTransform=p(),m.setAttributes=d(),m.insert=a().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=l(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;var E=n(28),h={};h.styleTagTransform=p(),h.setAttributes=d(),h.insert=a().bind(null,"head"),h.domAPI=r(),h.insertStyleElement=l(),e()(E.Z,h),E.Z&&E.Z.locals&&E.Z.locals;class b{static message(t){console.log(t)}}let g=+localStorage.getItem("todo-id-count"),C=[];class f{constructor(t="Untitled Todo",e="",n,o=3,r="",i=!1,a){this.id=g,this.title=t,this.desc=e,this.dueDate=n,this.priority=o,this.notes=r,this.isCompleted=i,this.inProject=a,C.push(this),localStorage.setItem("todo-id-count",JSON.parse(++g))}static todos(){return C}static setTodoArray(t){C=t}static getTodo(t){return JSON.parse(localStorage.getItem("todos")).filter((e=>e.id===+t))[0]}static removeTodo(t){const e=JSON.parse(localStorage.getItem("todos")).filter((e=>+t!==e.id));C=e,localStorage.setItem("todos",JSON.stringify(e))}static removeTodos(t){C.forEach((e=>{e.inProject===+t&&f.removeTodo(e.id)}))}static markComplete(t){const e=JSON.parse(localStorage.getItem("todos")).map((e=>(+e.id===t.id&&(e.isCompleted=!e.isCompleted),e)));C=e,localStorage.setItem("todos",JSON.stringify(e))}static setTitle(t,e){const n=JSON.parse(localStorage.getItem("todos")).map((n=>(t.id===+n.id&&(n.title=e),n)));C=n,localStorage.setItem("todos",JSON.stringify(n))}static setDueDate(t,e){const n=JSON.parse(localStorage.getItem("todos")).map((n=>(t.id===+n.id&&(n.dueDate=e),n)));C=n,localStorage.setItem("todos",JSON.stringify(n))}static setPriority(t,e){const n=JSON.parse(localStorage.getItem("todos")).map((n=>(t.id===+n.id&&(n.priority=e),n)));C=n,localStorage.setItem("todos",JSON.stringify(n))}static setDesc(t,e){const n=JSON.parse(localStorage.getItem("todos")).map((n=>(t.id===+n.id&&(n.desc=e),n)));C=n,localStorage.setItem("todos",JSON.stringify(n))}static setNotes(t,e){const n=JSON.parse(localStorage.getItem("todos")).map((n=>(t.id===+n.id&&(n.notes=e),n)));C=n,localStorage.setItem("todos",JSON.stringify(n))}get getTitle(){return""!==this.title.trim()?this.title:"Untitled Todo"}get getDesc(){return""===this.desc.trim()?"None":this.desc}get getDueDate(){return void 0===this.dueDate?"No Due Date":this.dueDate}get getPriority(){return this.priority}get getNotes(){return""===this.notes.trim()?"None":this.notes}get getIsCompleted(){return this.isCompleted}get getInProject(){return this.inProject}set setTitle(t){""!==t.trim()?this.title=t:b.message("You cannot have a blank todo title.")}set setDesc(t){this.desc=t}set setDueDate(t){this.dueDate=t}set setPriority(t){"number"!=typeof t||t<=0||t>=4?b.message("The priority you specified is not a valid argument."):this.priority=t}set setNotes(t){this.notes=t}set setInProject(t){this.inProject=t}}let y=+localStorage.getItem("project-id-count"),x=[];class v{constructor(t="Untitled Project"){this.id=y,this.title=t,x.push(this),localStorage.setItem("project-id-count",JSON.stringify(++y))}static projects(){return x}static setProjectArray(t){x=t}static getObjectTitle(t){return JSON.parse(localStorage.getItem("projects")).filter((e=>+e.id==+t))[0].title}static removeProject(t){const e=JSON.parse(localStorage.getItem("projects")).filter((e=>+t!==e.id));x=e,localStorage.setItem("projects",JSON.stringify(x))}get getId(){return this.id}get getTitle(){return""!==this.title.trim()?this.title:"Untitled Project"}set setTitle(t){""!==t.trim()?this.title=t:b.message("You cannot have a blank project title.")}}const w=function t(e,n){const o=document.createElement("div"),r=document.createElement("div"),i=document.createElement("button");o.style.cssText="\n        min-height: 300px;\n        width: 96%;\n\t\tmax-width: 1000px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background: rgba(255, 255, 255, .95);\n        color: black;\n        position: absolute;\n        top: 20px;\n        left: 50%;\n\t\ttransform: translateX(-50%);\n        border: 3px solid black;\n        pointer-events: auto;\n        user-select: auto;\n    ",o.classList.add("modal"),r.style.cssText="\n        height: 100%;\n        width: 100%;\n        padding: 10px;\n    ",i.style.cssText="\n\t\tcursor: pointer;\n\t\tbackground: #50AAF7;\n\t\tcolor: #0D2BA6;\n\t\tborder: 2px solid #0C7DED;\n\t\tposition: absolute;\n\t\tbottom: 10px;\n\t\tright: 10px;\n    ",i.addEventListener("click",(t=>{t.preventDefault(),document.body.removeChild(document.querySelector(".modal")),document.body.style.cssText="\n            opacity: 1;\n\t\t\tpointer-events: auto;\n\t\t\tuser-select: auto;\n        "}));let a=document.createElement("div"),s=document.createElement("label"),d=document.createElement("input"),c=document.createElement("p"),l=document.createElement("label"),A=document.createElement("input"),p=document.createElement("label"),u=document.createElement("div"),m=document.createElement("label"),E=document.createElement("input"),h=document.createElement("label"),b=document.createElement("input"),g=document.createElement("label"),C=document.createElement("input"),y=document.createElement("label"),x=document.createElement("textarea"),v=document.createElement("label"),w=document.createElement("textarea");switch(e){case"create":let e=document.createElement("button");i.textContent="Cancel",e.textContent="Add Todo",e.style.cssText="\n\t\t\t\tcursor: pointer;\n\t\t\t\tbackground: #50AAF7;\n\t\t\t\tcolor: #0D2BA6;\n\t\t\t\tborder: 2px solid #0C7DED;\n\t\t\t\tposition: absolute;\n\t\t\t\tbottom: 10px;\n\t\t\t\tleft: 10px;\n\t\t\t",e.addEventListener("click",(t=>{if(t.preventDefault(),""===d.value.trim())return c.style.cssText+="\n\t\t\t\t\t\tdisplay: block;\n\t\t\t\t\t",d.style.cssText+="\n\t\t\t\t\t\tmargin: 0;\n\t\t\t\t\t\tborder: 1px solid red;\n\t\t\t\t\t\toutline: none;\n\t\t\t\t\t",d.value="",void d.focus();const e=d.value.trim(),o=new Date(A.value.replace(/-/g,"/").replace(/T.+/,"")).toLocaleDateString(),r=document.querySelector('input[name="priority"]:checked').value,i=x.value.trim(),a=w.value.trim();try{f.setTodoArray(JSON.parse(localStorage.getItem("todos"))),console.log(f.todos())}catch(t){console.log(t)}new f(e,i,"Invalid Date"===o?void 0:o,+r,a,!1,+n),localStorage.setItem("todos",JSON.stringify(f.todos())),document.body.removeChild(document.querySelector(".modal")),document.body.style.cssText="\n            \t\topacity: 1;\n\t\t\t\t\tpointer-events: auto;\n\t\t\t\t\tuser-select: auto;\n        \t\t",k(n)})),a.style.cssText="\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\toverflow: auto;\n\t\t\t\tmargin-block-end: 2em;\n\t\t\t",s.textContent="Todo Name:",d.style.cssText="\n\t\t\t\twidth: 10em;\n\t\t\t\tmargin-block-end: 10px;\n\t\t\t",c.textContent="Please enter a name for the todo.",c.style.cssText="\n\t\t\t\tcolor: red;\n\t\t\t\tfont-size: .9em;\n\t\t\t\tmargin: 0;\n\t\t\t\tmargin-block-end: 10px;\n\t\t\t\tfont-weight: bold;\n\t\t\t\tdisplay: none;\n\t\t\t",l.textContent="Due Date:",A.setAttribute("type","date"),A.style.cssText="\n\t\t\t\twidth: 10em;\n\t\t\t\tmargin-block-end: 10px;\n\t\t\t",p.textContent="Priority:",E.setAttribute("type","radio"),E.setAttribute("name","priority"),E.setAttribute("value","1"),E.setAttribute("id","lowPriority"),E.style.cssText="\n\t\t\t\tmargin-inline-end: 5px;\n\t\t\t",E.setAttribute("checked","true"),m.setAttribute("for","lowPriority"),m.textContent="Low",b.setAttribute("type","radio"),b.setAttribute("name","priority"),b.setAttribute("value","2"),b.setAttribute("id","mediumPriority"),b.style.cssText="\n\t\t\t\tmargin-inline-end: 5px;\n\t\t\t",h.setAttribute("for","mediumPriority"),h.textContent="Medium",C.setAttribute("type","radio"),C.setAttribute("name","priority"),C.setAttribute("value","3"),C.setAttribute("id","highPriority"),C.style.cssText="\n\t\t\t\tmargin-inline-end: 5px;\n\t\t\t",g.setAttribute("for","highPriority"),g.textContent="High",u.style.cssText="\n\t\t\t\tmargin-block-end: 10px;\n\t\t\t",y.textContent="Description:",x.style.cssText="\n\t\t\t\tresize: vertical;\n\t\t\t\tmargin-block-end: 10px;\n\t\t\t",v.textContent="Notes:",w.style.cssText="\n\t\t\t\tresize: vertical;\n\t\t\t\tmargin-block-end: 10px;\n\t\t\t",a.appendChild(s),a.appendChild(d),a.appendChild(c),a.appendChild(l),a.appendChild(A),a.appendChild(p),a.appendChild(u),u.appendChild(E),u.appendChild(m),u.appendChild(document.createElement("br")),u.appendChild(b),u.appendChild(h),u.appendChild(document.createElement("br")),u.appendChild(C),u.appendChild(g),a.appendChild(y),a.appendChild(x),a.appendChild(v),a.appendChild(w),r.appendChild(a),r.appendChild(e);break;case"view":let o=f.getTodo(n),S=document.createElement("button"),B=document.createElement("button"),T=document.createElement("button");switch(S.style.cssText="\n\t\t\t\tcursor: pointer;\n\t\t\t\tbackground: #50AAF7;\n\t\t\t\tcolor: #0D2BA6;\n\t\t\t\tborder: 2px solid #0C7DED;\n\t\t\t\tposition: absolute;\n\t\t\t\tbottom: 10px;\n\t\t\t\tleft: 10px;\n\t\t\t",o.isCompleted){case!0:S.textContent="Mark Incomplete";break;case!1:S.textContent="Mark Complete"}switch(S.addEventListener("click",(t=>{t.preventDefault(),f.markComplete(o),document.body.removeChild(document.querySelector(".modal")),document.body.style.cssText="\n            \t\topacity: 1;\n\t\t\t\t\tpointer-events: auto;\n\t\t\t\t\tuser-select: auto;\n        \t\t",k(o.inProject)})),T.textContent="Edit",T.style.cssText="\n\t\t\t\tcursor: pointer;\n\t\t\t\tbackground: #50AAF7;\n\t\t\t\tcolor: #0D2BA6;\n\t\t\t\tborder: 2px solid #0C7DED;\n\t\t\t\tposition: absolute;\n\t\t\t\tbottom: 10px;\n\t\t\t\tleft: 140px;\n\t\t\t",T.addEventListener("click",(e=>{e.preventDefault(),d.removeAttribute("disabled"),A.removeAttribute("disabled"),x.removeAttribute("disabled"),w.removeAttribute("disabled"),r.removeChild(S),r.removeChild(B),r.removeChild(T),r.removeChild(i);const n=document.createElement("button"),a=document.createElement("button");if(r.appendChild(n),r.appendChild(a),n.style.cssText="\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t\tbackground: #50AAF7;\n\t\t\t\t\tcolor: #0D2BA6;\n\t\t\t\t\tborder: 2px solid #0C7DED;\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\tbottom: 10px;\n\t\t\t\t\tleft: 10px;\n\t\t\t\t",n.textContent="Update Todo",n.addEventListener("click",(e=>{e.preventDefault();const n=d.value.trim(),r=new Date(A.value.replace(/-/g,"/").replace(/T.+/,"")).toLocaleDateString(),i=document.querySelector('input[name="priority"]:checked').value,a=x.value.trim(),s=w.value.trim();f.setTitle(o,n),"Invalid Date"===r?f.setDueDate(o,void 0):f.setDueDate(o,r),f.setPriority(o,i),f.setDesc(o,a),f.setNotes(o,s),document.body.removeChild(document.querySelector(".modal")),document.body.style.cssText="\n            \t\topacity: 1;\n\t\t\t\t\tpointer-events: auto;\n\t\t\t\t\tuser-select: auto;\n        \t\t",k(+o.inProject),t("view",o.id)})),a.style.cssText="\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t\tbackground: #50AAF7;\n\t\t\t\t\tcolor: #0D2BA6;\n\t\t\t\t\tborder: 2px solid #0C7DED;\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\tbottom: 10px;\n\t\t\t\t\tright: 10px;\n\t\t\t\t",a.textContent="Cancel",a.addEventListener("click",(e=>{e.preventDefault(),document.body.removeChild(document.querySelector(".modal")),document.body.style.cssText="\n            \t\topacity: 1;\n\t\t\t\t\tpointer-events: auto;\n\t\t\t\t\tuser-select: auto;\n        \t\t",k(+o.inProject),t("view",o.id)})),A.setAttribute("type","date"),void 0!==o.dueDate){let t=o.dueDate.split("/").reverse(),e=t[2];t[2]=t[1],t[1]=e,1===t[1].length&&(t[1]="0"+t[1]),1===t[2].length&&(t[2]="0"+t[2]),t=t.join("-"),A.value=t}switch(p.textContent="Priority:",E.setAttribute("type","radio"),E.setAttribute("name","priority"),E.setAttribute("value","1"),E.setAttribute("id","lowPriority"),E.style.cssText="\n\t\t\t\tmargin-inline-end: 5px;\n\t\t\t",m.setAttribute("for","lowPriority"),m.textContent="Low",b.setAttribute("type","radio"),b.setAttribute("name","priority"),b.setAttribute("value","2"),b.setAttribute("id","mediumPriority"),b.style.cssText="\n\t\t\t\tmargin-inline-end: 5px;\n\t\t\t",h.setAttribute("for","mediumPriority"),h.textContent="Medium",C.setAttribute("type","radio"),C.setAttribute("name","priority"),C.setAttribute("value","3"),C.setAttribute("id","highPriority"),C.style.cssText="\n\t\t\t\tmargin-inline-end: 5px;\n\t\t\t",g.setAttribute("for","highPriority"),g.textContent="High",u.style.cssText="\n\t\t\t\tmargin-block-end: 10px;\n\t\t\t",+o.priority){case 1:E.setAttribute("checked","true");break;case 2:b.setAttribute("checked","true");break;case 3:C.setAttribute("checked","true")}u.appendChild(E),u.appendChild(m),u.appendChild(document.createElement("br")),u.appendChild(b),u.appendChild(h),u.appendChild(document.createElement("br")),u.appendChild(C),u.appendChild(g)})),B.textContent="Delete Todo",B.style.cssText="\n\t\t\t\tcursor: pointer;\n\t\t\t\tbackground: #50AAF7;\n\t\t\t\tcolor: #0D2BA6;\n\t\t\t\tborder: 2px solid #0C7DED;\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 10px;\n\t\t\t\tright: 10px;\n\t\t\t",B.addEventListener("click",(t=>{t.preventDefault(),confirm("Are you sure you want to delete this todo?")&&(f.removeTodo(o.id),document.body.removeChild(document.querySelector(".modal")),document.body.style.cssText="\n            \t\topacity: 1;\n\t\t\t\t\tpointer-events: auto;\n\t\t\t\t\tuser-select: auto;\n        \t\t",k(+o.inProject))})),i.textContent="Close",a.style.cssText="\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\toverflow: auto;\n\t\t\t\tmargin-block-end: 2em;\n\t\t\t",s.textContent="Todo Name:",d.style.cssText="\n\t\t\t\twidth: 10em;\n\t\t\t\tmargin-block-end: 10px;\n\t\t\t",d.setAttribute("disabled","true"),d.value=o.title,l.textContent="Due Date:",A.setAttribute("disabled","true"),A.style.cssText="\n\t\t\t\twidth: 10em;\n\t\t\t\tmargin-block-end: 10px;\n\t\t\t",void 0===o.dueDate?A.value="No Due Date":A.value=o.dueDate,+o.priority){case 1:p.textContent="Priority: Low";break;case 2:p.textContent="Priority: Medium";break;case 3:p.textContent="Priority: High"}p.style.cssText="\n\t\t\t\tmargin-block-end: 10px;\n\t\t\t",y.textContent="Description:",x.style.cssText="\n\t\t\t\tresize: vertical;\n\t\t\t\tmargin-block-end: 10px;\n\t\t\t",x.setAttribute("disabled","true"),x.value=o.desc,v.textContent="Notes:",w.style.cssText="\n\t\t\t\tresize: vertical;\n\t\t\t\tmargin-block-end: 10px;\n\t\t\t",w.setAttribute("disabled","true"),w.value=o.notes,a.appendChild(s),a.appendChild(d),a.appendChild(l),a.appendChild(A),a.appendChild(p),a.appendChild(u),a.appendChild(y),a.appendChild(x),a.appendChild(v),a.appendChild(w),r.appendChild(a),r.appendChild(S),r.appendChild(T),r.appendChild(B)}r.appendChild(i),o.appendChild(r),document.body.appendChild(o)};function S(t){const e=document.querySelector(".project-table");e.textContent="",JSON.parse(localStorage.getItem("projects")).forEach((t=>{const n=document.createElement("tr"),o=document.createElement("td");o.textContent=t.title,o.dataset.id=t.id,o.style.cssText="\n            font-size: 1.25em;\n            white-space: nowrap;\n            cursor: pointer;\n        ",n.appendChild(o),e.appendChild(n)}));const n=document.querySelectorAll(".project-table tr > td");n.forEach((e=>{e.addEventListener("click",(e=>{e.target.dataset.id!==+t&&(e.preventDefault(),k(e.target.dataset.id))}))})),n.forEach((t=>{t.addEventListener("dblclick",(t=>{T(t.target.dataset.id)}))}))}function k(t){document.querySelectorAll(".project-table > tr").forEach((t=>{t.style.cssText="\n\t\t\tbackground: none;\n\t\t\tcolor: black;\n\t\t\tfont-weight: normal;\n\t\t"})),document.querySelectorAll(".project-table tr:nth-child(odd)").forEach((t=>{t.style.cssText="\n\t\t\tbackground: rgb(208, 208, 208);\n\t\t\tmargin: 0;\n\t\t"}));const e=document.querySelector(`.project-table tr td[data-id="${t}"]`);if(null===e)return;e.closest("tr").style.cssText="\n\t\tbackground: #50AAF7;\n\t\tcolor: #0D2BA6;\n\t\tfont-weight: bold;\n\t";const n=document.createElement("h2"),o=document.createElement("div"),r=document.createElement("div"),i=document.createElement("button"),a=document.createElement("button");r.style.cssText="\n\t\tdisplay: flex;\n\t\tflex-wrap: nowrap;\n\t\tjustify-content: space-between;\n\t\tpadding-inline-end: 1em;\n\t\tmargin-block-start: 0.5em;\n\t",n.textContent=`${v.getObjectTitle(t)}`,i.textContent="+ new todo",i.addEventListener("click",(e=>{e.preventDefault(),document.body.style.cssText="\n\t\t\tbackground: rgba(0, 0, 0, 0.15);\n\t\t\tpointer-events: none;\n\t\t\tuser-select: none;\n\t\t",w("create",t)})),a.textContent="Delete Project",n.style.cssText="\n\t\tmargin: 0;\n\t",i.style.cssText="\n        cursor: pointer;\n        border: none;\n        background: transparent;\n        color: blue;\n        ",a.style.cssText="\n\t\tcursor: pointer;\n\t\tbackground: #50AAF7;\n\t\tcolor: #0D2BA6;\n\t\tborder: 2px solid #0C7DED;\n\t",o.style.cssText="\n        border-bottom: 1px solid black;\n    ",a.dataset.id=t,a.addEventListener("click",(e=>{e.preventDefault(),function(t){let e=!1;e=!!confirm("Are you sure you want to delete this project? Any todo's in this project will also be deleted."),e&&(f.removeTodos(t),v.removeProject(t),S(),document.querySelector(".todo-container").textContent="")}(t)}));const s=document.querySelector(".todo-container");s.textContent="",r.appendChild(n),r.appendChild(a),o.appendChild(r),o.appendChild(i),s.appendChild(o);const d=document.createElement("table"),c=JSON.parse(localStorage.getItem("todos")).filter((e=>+e.inProject==t));if(0===c.length){const t=document.createElement("p");t.textContent="No Todos",t.style.cssText="\n            margin: 0;\n        ",s.appendChild(t)}c.forEach((t=>{const e=document.createElement("tr"),n=document.createElement("td"),o=document.createElement("span"),r=document.createElement("span");switch(t.isCompleted&&(o.classList.add("completed"),r.classList.add("completed")),o.textContent=t.title,void 0===t.dueDate?r.textContent="No Due Date":r.textContent=`Due: ${t.dueDate}`,n.dataset.id=+t.id,n.style.cssText="\n            white-space: nowrap;\n            cursor: pointer;\n            display: flex;\n            flex-wrap: nowrap;\n            justify-content: space-between;\n            gap: 0.5em;\n        ",+t.priority){case 1:default:break;case 2:e.style.cssText="\n                    background: #F4F28A;\n                ";break;case 3:e.style.cssText="\n                    background: #FF7A7A;\n                    font-weight: bold;\n                "}n.appendChild(o),n.appendChild(r),e.appendChild(n),d.appendChild(e),e.addEventListener("click",(t=>{t.preventDefault(),w("view",n.dataset.id)}))})),d.style.cssText="\n            width: 100%;\n        ",c.length>0&&s.appendChild(d)}function B(){return new v}function T(t){let e=document.querySelector(`.project-table tr td[data-id="${t}"]`);if(null===e)return;const n=e.textContent;e.textContent="";const o=document.createElement("input");o.setAttribute("type","text"),o.value=n,o.style.cssText="\n\t\twidth: 100%;\n    ",e.appendChild(o),o.focus(),o.select(),e.addEventListener("keydown",(n=>{if(13===n.keyCode||"Enter"===n.key){if(""===o.value.trim())return e.removeChild(o),void S(t);let n=JSON.parse(localStorage.getItem("projects")).map((e=>(+e.id==+t&&(e.title=o.value),e)));localStorage.setItem("projects",JSON.stringify(n)),e.removeChild(o),S(t),k(t)}}))}document.body.appendChild(function(){const t=document.createElement("div");return null===localStorage.getItem("has-visited")&&(localStorage.setItem("has-visited",1),B(),localStorage.setItem("projects",JSON.stringify(v.projects())),localStorage.setItem("project-id-count",1),localStorage.setItem("todos",JSON.stringify(f.todos())),localStorage.setItem("todo-id-count",1)),t.appendChild(function(){const t=document.createElement("header"),e=document.createElement("h1"),n=document.createElement("button");return e.textContent="TODO UI",n.textContent="+ new project",n.classList.add("new-project"),n.style.cssText="\n        cursor: pointer;\n        border: none;\n        background: transparent;\n        color: blue;\n    ",e.style.cssText="\n        margin: 0;\n        padding: 0;\n        margin-block-end: 0.5em;\n        padding-inline: 0.5em;\n    ",t.style.cssText="\n        border-bottom: 3px solid black;\n        padding-block-start: 0.5em;\n    ",t.appendChild(e),t.appendChild(n),t}()),t.appendChild(function(){const t=document.createElement("main"),e=document.createElement("div"),n=document.createElement("div"),o=document.createElement("table"),r=document.createElement("div");return JSON.parse(localStorage.getItem("projects")).forEach((t=>{const e=document.createElement("tr"),n=document.createElement("td");n.textContent=t.title,n.dataset.id=t.id,n.style.cssText="\n            font-size: 1.25em;\n            white-space: nowrap;\n            cursor: pointer;\n        ",e.appendChild(n),o.appendChild(e)})),o.classList.add("project-table"),r.classList.add("todo-container"),t.style.cssText="\n        min-height: 1.25em;\n        border-block-end: 3px solid black;\n    ",e.style.cssText="\n        display: grid;\n        grid-template-columns: 1fr 2fr;\n        grid-template-rows: 1fr;\n    ",n.style.cssText="\n        grid-column: 1 / 2;\n        overflow: auto;\n        border-inline-end: 3px solid black;\n    ",o.style.cssText="\n        width: 100%;\n    ",r.style.cssText="\n        grid-column: 2 / 3;\n        overflow: auto;\n    ",n.appendChild(o),e.appendChild(n),e.appendChild(r),t.appendChild(e),t}()),t}());const I=document.querySelectorAll(".project-table > tr"),D=document.querySelector(".new-project");I.forEach((t=>{t.addEventListener("click",(t=>{k(t.target.dataset.id)}))})),D.addEventListener("click",(()=>{!function(){try{v.setProjectArray(JSON.parse(localStorage.getItem("projects")))}catch(t){console.log(t)}const t=B();localStorage.setItem("projects",JSON.stringify(v.projects()));const e=t.getId;S(e);const n=document.querySelector(`.project-table tr td[data-id="${e}"]`);n.textContent="";const o=document.createElement("input");o.setAttribute("type","text"),o.value="Untitled Project",o.style.cssText="\n\t\twidth: 100%;\n    ",n.appendChild(o),o.focus(),o.select(),n.addEventListener("keydown",(n=>{if(13===n.keyCode||"Enter"===n.key){if(""===o.value.trim())return v.removeProject(e),void S();t.setTitle=o.value.trim(),localStorage.setItem("projects",JSON.stringify(v.projects())),S(e),k(e)}}))}()})),I.forEach((t=>{t.addEventListener("dblclick",(t=>{T(t.target.dataset.id)}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,